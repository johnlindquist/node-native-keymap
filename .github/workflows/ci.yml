name: CI

on: [push, pull_request]

jobs:
  # windows:
  #   name: Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 20.16.0
  #     - run: npm ci
  #     - run: npm test

  # linux:
  #   name: Linux
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 20.16.0
  #     - run: npm ci
  #     - run: npm test

  # macos:
  #   name: macOS
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 20.16.0
  #     - name: Set up Python virtual environment
  #       run: |
  #         python3 -m venv venv
  #         source venv/bin/activate
  #     - name: Install setuptools
  #       run: pip install setuptools
  #     - run: npm ci
  #     - run: npm test

  test-electron-rebuild:
    name: Test Electron Rebuild
    runs-on: ubuntu-latest
    env:
      DEBUG: electron-rebuild,node-gyp
      ELECTRON_REBUILD_VERBOSE: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 20.16.0
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install gcc-11 g++-11 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11
          npm ci
          npm install -g electron-rebuild
      - name: Check compiler versions
        run: |
          gcc --version
          g++ --version
      - name: Check node-gyp version
        run: npx node-gyp --version
      - name: Create test project
        run: |
          mkdir test-project
          cd test-project
          npm init -y
          npm install electron@latest
          npm install ../
      - name: Run Electron Rebuild
        run: |
          cd test-project
          export CXXFLAGS="-std=c++20"
          export CFLAGS="-std=c++20"
          npx electron-rebuild --version=$(npm list electron --depth=0 | grep electron | cut -d@ -f2) --cxxflags="-std=c++20"
      - name: Print compiler flags
        run: |
          cd test-project
          npx node-gyp configure --verbose

  publish:
    needs: [test-electron-rebuild]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 20.16.0
          registry-url: 'https://registry.npmjs.org'
      - name: Git config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - run: npm ci
      - name: Bump version
        run: npx standard-version
      - name: Push changes
        run: git push --follow-tags origin main
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

env:
  ACTIONS_STEP_DEBUG: true